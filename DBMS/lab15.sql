---------------------- PART – A

-- 1. CREATE TABLE STU_MASTER WITH CONSTRAINTS
CREATE TABLE STU_MASTER
(
  RNO INT PRIMARY KEY,
  NAME VARCHAR(50),
  BRANCH VARCHAR(20) DEFAULT 'GENERAL',
  SPI DECIMAL(4,2) CHECK (SPI <= 10),
  BKLOG INT CHECK (BKLOG >= 0)
);

-- 2. INSERT SAMPLE DATA
INSERT INTO STU_MASTER VALUES
(101,'RAJU','CE',8.80,0),
(102,'AMIT','CE',2.20,3),
(103,'SANJAY','ME',1.50,6),
(104,'NEHA','EC',7.65,0),
(105,'MEERA','EE',5.52,2),
(106,'MAHESH','EC',4.50,3);

-- 3. CHECK DEFAULT VALUE IN BRANCH
INSERT INTO STU_MASTER (RNO, NAME, SPI, BKLOG) VALUES (107,'MEET',7.20,1);

-- 4. TRY TO UPDATE SPI OF RAJU FROM 8.80 TO 12 (WILL FAIL DUE TO CONSTRAINT)
UPDATE STU_MASTER
SET SPI = 12
WHERE NAME = 'RAJU';

-- 5. TRY TO UPDATE BKLOG OF NEHA FROM 0 TO -1 (WILL FAIL DUE TO CONSTRAINT)
UPDATE STU_MASTER
SET BKLOG = -1
WHERE NAME = 'NEHA';


-------------------------- PART – B

-- 1. CREATE TABLES WITH VALIDATION

CREATE TABLE DEPT_DETAILS
(
  DID INT PRIMARY KEY,
  DNAME VARCHAR(50) NOT NULL
);

CREATE TABLE CITY_DETAILS
(
  CID INT PRIMARY KEY,
  CNAME VARCHAR(50) NOT NULL
);

CREATE TABLE EMP_DETAILS
(
  EID INT PRIMARY KEY,
  ENAME VARCHAR(50) NOT NULL,
  DID INT,
  CID INT,
  SALARY DECIMAL(10,2) CHECK (SALARY > 0),
  EXPERIENCE INT CHECK (EXPERIENCE >= 0),
  FOREIGN KEY (DID) REFERENCES DEPT_DETAILS(DID),
  FOREIGN KEY (CID) REFERENCES CITY_DETAILS(CID)
);

-- 2. TRY TO INSERT DATA THAT VIOLATES VALIDATION

-- NEGATIVE SALARY (WILL FAIL)
INSERT INTO EMP_DETAILS VALUES (1,'ANKIT',1,1,-5000,3);

-- NEGATIVE EXPERIENCE (WILL FAIL)
INSERT INTO EMP_DETAILS VALUES (2,'PRIYA',1,1,20000,-2);

-- INVALID DEPARTMENT ID (WILL FAIL DUE TO FOREIGN KEY)
INSERT INTO EMP_DETAILS VALUES (3,'VIJAY',99,1,25000,5);

-- INVALID CITY ID (WILL FAIL DUE TO FOREIGN KEY)
INSERT INTO EMP_DETAILS VALUES (4,'MEENA',1,99,30000,4);


---------------------- PART – C

-- 1. CREATE TABLES WITH PROPER VALIDATION

CREATE TABLE COUNTRY
(
  CID INT PRIMARY KEY,
  CNAME VARCHAR(50) NOT NULL
);

CREATE TABLE STATE
(
  SID INT PRIMARY KEY,
  SNAME VARCHAR(50) NOT NULL,
  CID INT,
  FOREIGN KEY (CID) REFERENCES COUNTRY(CID)
);

CREATE TABLE DISTRICT
(
  DID INT PRIMARY KEY,
  DNAME VARCHAR(50) NOT NULL,
  SID INT,
  FOREIGN KEY (SID) REFERENCES STATE(SID)
);

CREATE TABLE DEPT_INFO
(
  DID INT PRIMARY KEY,
  DNAME VARCHAR(50) NOT NULL
);

CREATE TABLE CITY_INFO
(
  CID INT PRIMARY KEY,
  CNAME VARCHAR(50) NOT NULL,
  DID INT,
  FOREIGN KEY (DID) REFERENCES DISTRICT(DID)
);

CREATE TABLE EMP_INFO
(
  EID INT PRIMARY KEY,
  ENAME VARCHAR(50) NOT NULL,
  DID INT,
  CID INT,
  SALARY DECIMAL(10,2) CHECK (SALARY > 0),
  EXPERIENCE INT CHECK (EXPERIENCE >= 0),
  FOREIGN KEY (DID) REFERENCES DEPT_INFO(DID),
  FOREIGN KEY (CID) REFERENCES CITY_INFO(CID)
);


-- 2. INSERT 5 RECORDS IN EACH TABLE

-- COUNTRY
INSERT INTO COUNTRY VALUES 
(1,'INDIA'),
(2,'USA'),
(3,'UK'),
(4,'CANADA'),
(5,'AUSTRALIA');

-- STATE
INSERT INTO STATE VALUES
(1,'GUJARAT',1),
(2,'MAHARASHTRA',1),
(3,'CALIFORNIA',2),
(4,'ONTARIO',4),
(5,'QUEENSLAND',5);

-- DISTRICT
INSERT INTO DISTRICT VALUES 
(1,'AHMEDABAD',1),
(2,'MUMBAI',2),
(3,'LOS ANGELES',3),
(4,'TORONTO',4),
(5,'BRISBANE',5);

-- DEPT_INFO
INSERT INTO DEPT_INFO VALUES 
(1,'HR'),
(2,'IT'),
(3,'SALES'),
(4,'FINANCE'),
(5,'MARKETING');

-- CITY_INFO
INSERT INTO CITY_INFO VALUES 
(1,'NAVRANGPURA',1),
(2,'ANDHERI',2),
(3,'HOLLYWOOD',3),
(4,'DOWNTOWN',4),
(5,'CITYCENTRE',5);

-- EMP_INFO
INSERT INTO EMP_INFO VALUES 
(101,'RAJU',2,1,35000,5),
(102,'AMIT',1,2,28000,2),
(103,'SANJAY',3,3,40000,7),
(104,'NEHA',5,4,25000,3),
(105,'MEERA',4,5,60000,10);


-- 3. DISPLAY EMPLOYEENAME, DEPARTMENTNAME, SALARY, EXPERIENCE, CITY, DISTRICT, STATE AND COUNTRY OF ALL EMPLOYEES

SELECT EMP_INFO.ENAME,
       DEPT_INFO.DNAME,
       EMP_INFO.SALARY,
       EMP_INFO.EXPERIENCE,
       CITY_INFO.CNAME AS CITY,
       DISTRICT.DNAME AS DISTRICT,
       STATE.SNAME AS STATE,
       COUNTRY.CNAME AS COUNTRY
FROM EMP_INFO
JOIN DEPT_INFO ON EMP_INFO.DID = DEPT_INFO.DID
JOIN CITY_INFO ON EMP_INFO.CID = CITY_INFO.CID
JOIN DISTRICT ON CITY_INFO.DID = DISTRICT.DID
JOIN STATE ON DISTRICT.SID = STATE.SID
JOIN COUNTRY ON STATE.CID = COUNTRY.CID;
